{"ast":null,"code":"var _jsxFileName = \"/Users/krittiyaclark/Documents/crown-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const emailSignInStart = this.props.emailSignInStart;\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const googleSignInStart = this.props.googleSignInStart;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      handleChange: this.handleChange,\n      value: this.state.email,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" Sign in \"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/krittiyaclark/Documents/crown-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","state","email","password","handleChange","target","value","name","setState","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SACCC,iBADD,EAECC,gBAFD,QAGO,+BAHP;AAKA,OAAO,uBAAP;;AAEA,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAqC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SASnBC,YATmB,GASJ,MAAMC,KAAN,IAAe;AAC7BA,MAAAA,KAAK,CAACC,cAAN;AAD6B,YAErBP,gBAFqB,GAEA,KAAKI,KAFL,CAErBJ,gBAFqB;AAAA,0BAGD,KAAKQ,KAHJ;AAAA,YAGrBC,KAHqB,eAGrBA,KAHqB;AAAA,YAGdC,QAHc,eAGdA,QAHc;AAK7BV,MAAAA,gBAAgB,CAACS,KAAD,EAAQC,QAAR,CAAhB;AACA,KAfkB;;AAAA,SAiBnBC,YAjBmB,GAiBJL,KAAK,IAAI;AAAA,4BACCA,KAAK,CAACM,MADP;AAAA,YACfC,KADe,iBACfA,KADe;AAAA,YACRC,IADQ,iBACRA,IADQ;AAGvB,WAAKC,QAAL,CAAc;AAAE,SAACD,IAAD,GAAQD;AAAV,OAAd;AACA,KArBkB;;AAGlB,SAAKL,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE,EADK;AAEZC,MAAAA,QAAQ,EAAE;AAFE,KAAb;AAIA;;AAgBDM,EAAAA,MAAM,GAAG;AAAA,UACAjB,iBADA,GACsB,KAAKK,KAD3B,CACAL,iBADA;AAER,WACC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFD,EAIC;AAAM,MAAA,QAAQ,EAAE,KAAKM,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,SAAD;AACC,MAAA,IAAI,EAAC,OADN;AAEC,MAAA,IAAI,EAAC,OAFN;AAGC,MAAA,YAAY,EAAE,KAAKM,YAHpB;AAIC,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,KAJnB;AAKC,MAAA,KAAK,EAAC,OALP;AAMC,MAAA,QAAQ,MANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EASC,oBAAC,SAAD;AACC,MAAA,IAAI,EAAC,UADN;AAEC,MAAA,IAAI,EAAC,UAFN;AAGC,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,QAHnB;AAIC,MAAA,YAAY,EAAE,KAAKC,YAJpB;AAKC,MAAA,KAAK,EAAC,UALP;AAMC,MAAA,QAAQ,MANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATD,EAiBC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAEC,oBAAC,YAAD;AACC,MAAA,IAAI,EAAC,QADN;AAEC,MAAA,OAAO,EAAEZ,iBAFV;AAGC,MAAA,cAAc,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFD,CAjBD,CAJD,CADD;AAkCA;;AA5DmC;;AA+DrC,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAK;AACvCnB,EAAAA,iBAAiB,EAAE,MAAMmB,QAAQ,CAACnB,iBAAiB,EAAlB,CADM;AAEvCC,EAAAA,gBAAgB,EAAE,CAACS,KAAD,EAAQC,QAAR,KACjBQ,QAAQ,CAAClB,gBAAgB,CAAC;AAAES,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAAjB;AAH8B,CAAL,CAAnC;;AAMA,eAAed,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkChB,MAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport {\n\tgoogleSignInStart,\n\temailSignInStart\n} from '../../redux/user/user.actions';\n\nimport './sign-in.styles.scss';\n\nclass SignIn extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: ''\n\t\t};\n\t}\n\n\thandleSubmit = async event => {\n\t\tevent.preventDefault();\n\t\tconst { emailSignInStart } = this.props;\n\t\tconst { email, password } = this.state;\n\n\t\temailSignInStart(email, password);\n\t};\n\n\thandleChange = event => {\n\t\tconst { value, name } = event.target;\n\n\t\tthis.setState({ [name]: value });\n\t};\n\n\trender() {\n\t\tconst { googleSignInStart } = this.props;\n\t\treturn (\n\t\t\t<div className='sign-in'>\n\t\t\t\t<h2>I already have an account</h2>\n\t\t\t\t<span>Sign in with your email and password</span>\n\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\tname='email'\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\tlabel='email'\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\tname='password'\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\tlabel='password'\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='buttons'>\n\t\t\t\t\t\t<CustomButton type='submit'> Sign in </CustomButton>\n\t\t\t\t\t\t<CustomButton\n\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\tonClick={googleSignInStart}\n\t\t\t\t\t\t\tisGoogleSignIn>\n\t\t\t\t\t\t\tSign in with Google\n\t\t\t\t\t\t</CustomButton>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\n\temailSignInStart: (email, password) =>\n\t\tdispatch(emailSignInStart({ email, password }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}