{"ast":null,"code":"var _jsxFileName = \"/Users/krittiyaclark/Documents/crown-clothing/client/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart.item/cart.item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions.js';\nimport './cart-dropdown.styles.scss';\n\nconst CartDropDown = ({\n  cartItems,\n  history,\n  dispatch\n}) => React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"cart-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItems => React.createElement(CartItem, {\n  key: cartItems.id,\n  item: cartItems,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n})) : React.createElement(\"span\", {\n  className: \"empty-message\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"Your cart is empty\")), React.createElement(CustomButton, {\n  onClick: () => {\n    history.push('/checkout');\n    dispatch(toggleCartHidden());\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropDown));","map":{"version":3,"sources":["/Users/krittiyaclark/Documents/crown-clothing/client/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","withRouter","CustomButton","CartItem","selectCartItems","toggleCartHidden","CartDropDown","cartItems","history","dispatch","length","map","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,gBAAT,QAAiC,kCAAjC;AAEA,OAAO,6BAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KACjB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEIF,SAAS,CAACG,MAAV,GACIH,SAAS,CAACI,GAAV,CAAcJ,SAAS,IACnB,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,SAAS,CAACK,EAAzB;AAA6B,EAAA,IAAI,EAAEL,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,GAKA;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ,CADJ,EAYI,oBAAC,YAAD;AACI,EAAA,OAAO,EAAE,MAAM;AACXC,IAAAA,OAAO,CAACK,IAAR,CAAa,WAAb;AACAJ,IAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACH,GAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZJ,CADJ;;AAsBA,MAAMS,eAAe,GAAGd,wBAAwB,CAAC;AAC7CO,EAAAA,SAAS,EAAEH;AADkC,CAAD,CAAhD;AAIA,eAAeH,UAAU,CAACF,OAAO,CAACe,eAAD,CAAP,CAAyBR,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart.item/cart.item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions.js';\n\nimport './cart-dropdown.styles.scss';\n\nconst CartDropDown = ({ cartItems, history, dispatch }) => (\n    <div className='cart-dropdown'>\n        <div className='cart-items'>\n        {\n            cartItems.length ? (\n                cartItems.map(cartItems => (\n                    <CartItem key={cartItems.id} item={cartItems} />\n            ))\n        ) : (\n            <span className='empty-message'>Your cart is empty</span>\n        )\n        }\n        </div>\n        <CustomButton \n            onClick={() => {\n                history.push('/checkout');\n                dispatch(toggleCartHidden());\n            }}\n        >GO TO CHECKOUT</CustomButton>\n    </div>\n)\n\nconst mapStateToProps = createStructuredSelector({\n    cartItems: selectCartItems\n});\n\nexport default withRouter(connect(mapStateToProps)(CartDropDown));"]},"metadata":{},"sourceType":"module"}